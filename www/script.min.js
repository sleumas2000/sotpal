var game={};$(document).ready(function(){var e=new URLSearchParams(window.location.search).has("admin");if(e){var a=new URLSearchParams(window.location.search).get("admin");console.log("Showing admin buttons"),$("#new-game-button-container").removeClass("hidden"),$("#new-game-submit-button").click(function(){var e=parseInt($("#num-decks-field").val());n.emit("start new game",{numDecks:e,password:a})}),$(".card-button").removeClass("hidden"),$("#players-sidebar").addClass("admin-padding")}var n=io();function r(){$("#shade").addClass("hidden"),$("#name-dialog").addClass("hidden")}function d(r){if($("#players-list").append($("<li>").addClass("list-group-item").addClass("player-card").addClass(r.playerName==game.playerName?"this-player":"other-player").addClass(r.connected?"connected":"disconnected").html(`<span class="player-name">${r.playerName}</span><span class="player-hand-size"><span class="number">${r.handSize}</span> cards</span>`)),e){var d=$("#players-list li:nth-last-child(1)");d.append($('<input type="button" value="K">').addClass("btn btn-sm btn-danger player-admin-button").click(function(){var e,c;e=r.playerName,1==(c=d).children(".kick-button").length?c.children(".kick-button").remove():c.append($('<input type="button" value="Kick?">').addClass("btn btn-sm btn-danger player-admin-button kick-button").click(function(){!function(e){n.emit("remove player",{targetName:e,password:a})}(e)}))})).append($('<input type="button" value="D">').addClass("btn btn-sm btn-outline-warning player-admin-button").click(function(){var e;e=r.playerName,n.emit("give card",{targetName:e,password:a})})).append($('<input type="button" value="R">').addClass("btn btn-sm btn-outline-danger player-admin-button").click(function(){var e;e=r.playerName,n.emit("give back card",{targetName:e,password:a})}))}}function t(e){var a=e.slice(0,1).replace("X","10"),n=e.slice(1,2).replace("S","♠").replace("C","♣").replace("D","♦").replace("H","♥");$("#discard-area").append($("<div>").addClass("discard").addClass("card").addClass("face-up").addClass("♥"==n||"♦"==n?"red":"black").click(m).html(`<div class="card-number">${a}</div><div class="card-suit">${n}</div><div class="card-suit flipped">${n}</div><div class="card-number flipped">${a}</div>`)),$("#discard-area div.card:nth-last-child(2) div.flipped").remove(),$("#discard-area div.card:nth-last-child(2)").off("click"),$("#discard-area div.card:nth-last-child(11)").remove()}function i(e){var a=e.slice(0,1).replace("X","10"),r=e.slice(1,2).replace("S","♠").replace("C","♣").replace("D","♦").replace("H","♥");$("#hand-area").append($("<div>").addClass("hand").addClass("card").addClass("face-up").addClass("♥"==r||"♦"==r?"red":"black").html(`<div class="card-number">${a}</div><div class="card-suit">${r}</div><div class="card-suit flipped">${r}</div><div class="card-number flipped">${a}</div>`).click(function(){var a;a=e,this.remove(),t(a),h(game.playerName,-1),n.emit("play card",{card:a})}))}function l(e){var a;$("#console-list").append($("<li>").addClass("log-entry").text(e)),(a=$("#console-area")[0]).scrollTop=a.scrollHeight}function s(e,a){var n;$("#chat-list").append($("<li>").addClass("chat-entry").append($("<span>").addClass("chat-player-name").text(e+": ")).append($("<span>").addClass("chat-player-message").text(a))),(n=$("#chat-area")[0]).scrollTop=n.scrollHeight}function o(){$("#discard-area div.card:nth-last-child(1)").remove(),$("#discard-area div.card:nth-last-child(1)").click(m)}function m(){n.emit("take back card")}function h(e,a){for(var n=$("#players-list li").length,r=0;r<n;r++){var d=$(`#players-list li:nth-child(${r+1})`);if(d.children("span.player-name").text()==e){var c=parseInt(d.children("span.player-hand-size").children("span.number").text());d.children("span.player-hand-size").children("span.number").text(c+a)}}}function u(e){return e.slice(0,1).replace("X","10")+e.slice(1,2).replace("S","♠").replace("C","♣").replace("D","♦").replace("H","♥")}n.on("disconnect",function(){$("#shade").removeClass("hidden"),$("#disconnected-alert").removeClass("hidden")}),n.on("game title",function(e){$(document).prop("title",e.gameTitle)}),n.on("connect",function(){$("#disconnected-alert").addClass("hidden"),game&&game.playerName&&n.emit("rejoin as existing player",game.playerName),s("System","You are connected to chat")}),$("#disconnected-alert").click(function(){}),$("#name-join-button").click(function(){var e=$("#name-field").val();e.length<2?$("#name-error-alert").removeClass("hidden").text("This name is too short. Please try another"):e.length>32?$("#name-error-alert").removeClass("hidden").text("This name is too long. Please try another"):n.emit("name query",{playerName:e})}),n.on("name query response",function(e){"active"==e.status?$("#name-error-alert").removeClass("hidden").text("This name is already in use. Please try another"):"disconnected"==e.status?(l("Rejoining game as player "+e.playerName),n.emit("rejoin as existing player",e.playerName),r()):"unused"==e.status?(l("Joining game as new player "+e.playerName),n.emit("join as new player",e.playerName),r()):console.log("ERROR")}),n.on("game state update",function(e){game=e;for(var a=(h=$("#players-list li").length)==Object.keys(e.players).length,n=0;n<h;n++){var r=$(`#players-list li:nth-child(${n+1})`),l=r.children("span.player-name").text(),s=r.hasClass("connected"),o=parseInt(r.children("span.player-hand-size").children("span.number").text());a=a&&e.players[l].connected==s&&e.players[l].handSize==o}if(!a)for(p in $("#players-list li").remove(),e.players)d(e.players[p]);var m,h=$("#discard-area div.card").length;m=e.discard.length>10?e.discard.slice(e.discard.length-10,e.discard.length):[...e.discard];for(var u=h==m.length,n=0;n<h;n++){var r=$(`#discard-area div.card:nth-child(${n+1})`),v=r.children("div.card-number:not(.flipped)").text().replace("10","X")+r.children("div.card-suit:not(.flipped)").text().replace("♠","S").replace("♣","C").replace("♦","D").replace("♥","H");u=u&&v==m[n]}if(!u)for(c of($("#discard-area div.card").remove(),e.discard))t(c);for(var y=(h=$("#hand-area div.card").length)==e.hand.length,f=Array(h),g=[...e.hand],n=0;n<h;n++){var r=$(`#hand-area div.card:nth-child(${n+1})`),v=r.children("div.card-number:not(.flipped)").text().replace("10","X")+r.children("div.card-suit:not(.flipped)").text().replace("♠","S").replace("♣","C").replace("♦","D").replace("♥","H");f[n]=v}f.sort(),g.sort();for(var n=0;n<h;n++)y=y&&f[n]==g[n];if(!y)for(c of($("#hand-area div.card").remove(),e.hand))i(c);$("#deck-area .card .number-coin span.number").text(e.deckSize)}),$("#deck-area").click(function(){n.emit("draw card")}),$("#left-button").click(function(e){o(),n.emit("move card from discard to deck",{password:a}),e.stopPropagation()}),$("#shuffle-button").click(function(e){n.emit("shuffle deck",{password:a}),e.stopPropagation()}),$("#right-button").click(function(e){n.emit("move card from deck to discard",{password:a}),e.stopPropagation()}),n.on("deck shuffled",function(){l("The deck was shuffled")}),n.on("card moved from deck to discard",function(e){t(e.card),l(u(e.card)+" was moved from the deck to the discard pile")}),n.on("card moved from discard to deck",function(e){l(u(e.card)+" was returned from the discard pile to the deck")}),n.on("discard shuffled into deck",function(){l("The discard pile was shuffled back into the deck")}),n.on("deck added",function(){l("An extra deck was added")}),n.on("chat message",function(e){s(e.playerName,e.message)}),$("#chat-send-button").click(function(){var e=$("#chat-field").val();$("#chat-field").val(""),n.emit("chat message",{playerName:game.playerName,message:e})}),n.on("you played card",function(e){l("You played "+u(e.card))}),n.on("you were given card",function(e){l("You were given a card"),i(e.card),h(e.playerName,1)}),n.on("you drew card",function(e){l("You drew a card"),i(e.card),h(e.playerName,1)}),n.on("you were given back card",function(e){l("You were given back the card "+u(e.card)),i(e.card),h(e.playerName,1),o()}),n.on("you took back card",function(e){l("You took back the card "+u(e.card)),i(e.card),h(e.playerName,1),o()}),n.on("player was given card",function(e){l(e.playerName+" was given a card"),h(e.playerName,1)}),n.on("player drew card",function(e){l(e.playerName+" drew a card"),h(e.playerName,1)}),n.on("player was given back card",function(e){l(e.playerName+" was given back the card "+u(e.card)),h(e.playerName,1),o()}),n.on("player took back card",function(e){l(e.playerName+" took back "+u(e.card)),h(e.playerName,1),o()}),n.on("player played card",function(e){t(e.card),h(e.playerName,-1),l(e.playerName+" played "+u(e.card))}),n.on("player removed",function(e){l(e.playerName+" was removed from the game");for(var a=$("#players-list li").length,n=0;n<a;n++){var r=$(`#players-list li:nth-child(${n+1})`),d=r.children("span.player-name").text();if(d==e.playerName)return void r.remove()}}),n.on("player joined",function(e){$("#shade").addClass("hidden"),l(e.playerName+" joined the game")}),n.on("player disconnected",function(e){l(e.playerName+" lost connection")}),n.on("player reconnected",function(e){$("#shade").addClass("hidden"),l(e.playerName+" reconnected")}),n.on("game ended",function(){$("#disconnected-alert").text("The game  has ended. Please refresh the page to join a new game").removeClass("hidden"),$("#shade").removeClass("hidden")})});
